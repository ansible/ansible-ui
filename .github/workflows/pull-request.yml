name: Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  packages:
    name: Packages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      awx: ${{ steps.changed-awx.outputs.changed == 'true' }}
      hub: ${{ steps.changed-hub.outputs.changed == 'true' }}
      eda: ${{ steps.changed-eda.outputs.changed == 'true' }}
      afw: ${{ steps.changed-afw.outputs.changed == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-awx
        with:
          paths: frontend/awx frontend/common cypress/e2e/awx framework cypress/support
      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-hub
        with:
          paths: frontend/hub frontend/common cypress/e2e/hub framework cypress/support
      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-eda
        with:
          paths: frontend/eda frontend/common cypress/e2e/eda framework cypress/support
      - uses: marceloprado/has-changed-path@v1.0.1
        id: changed-afw
        with:
          paths: framework

  container-image:
    name: Container Image
    runs-on: ubuntu-latest
    needs: packages
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: NPM Build
        run: npm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Ansible UI
        uses: docker/build-push-action@v4
        with:
          context: .
          target: ansible-ui
          tags: ansible-ui
          load: true

      - run: docker save ansible-ui > ansible-ui.tar
      - uses: actions/upload-artifact@v3
        with:
          name: ansible-ui.tar
          path: ansible-ui.tar

  # SEE: https://github.com/ansible/ansible-hub-ui/blob/master/.github/workflows/cypress.yml
  hub-e2e:
    name: HUB E2E
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - packages
      - container-image
    strategy:
      fail-fast: false
      matrix:
        containers: [1]
    steps:
      - name: Check for changes
        id: check
        run: echo "skip=${{ needs.packages.outputs.hub != 'true' }}" >> "$GITHUB_OUTPUT"
      - name: Skip job
        if: steps.check.outputs.skip == 'true'
        run: echo "No build required"
      - name: Checkout
        if: steps.check.outputs.skip != 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Download container image
        if: steps.check.outputs.skip != 'true'
        uses: actions/download-artifact@v3
        with:
          name: ansible-ui.tar
      - name: Load container image
        if: steps.check.outputs.skip != 'true'
        run: docker load --input ansible-ui.tar
      - name: Setup Node
        if: steps.check.outputs.skip != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        if: steps.check.outputs.skip != 'true'
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        if: steps.check.outputs.skip != 'true'
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' && steps.check.outputs.skip != 'true'
        run: npm ci
      - name: 'Checkout galaxy_ng'
        uses: actions/checkout@v3
        with:
          repository: 'ansible/galaxy_ng'
          path: 'galaxy_ng'
      - name: 'Checkout oci_env'
        uses: actions/checkout@v3
        with:
          repository: 'pulp/oci_env'
          path: 'oci_env'
      - name: 'Configure oci_env'
        working-directory: 'oci_env'
        run: |
          pip install -e client
      - name: Create Config File
        run: |
          echo 'COMPOSE_PROFILE=galaxy_ng/base' >> compose.env
          echo 'DEV_SOURCE_PATH=galaxy_ng' >> compose.env
          echo 'COMPOSE_BINARY=docker' >> compose.env
          echo 'DJANGO_SUPERUSER_USERNAME=admin' >> compose.env
          echo 'DJANGO_SUPERUSER_PASSWORD=password' >> compose.env
          echo 'API_HOST=localhost' >> compose.env
          echo 'API_PORT=5001' >> compose.env
          echo 'API_PROTOCOL=http' >> compose.env
      - name: 'oci-env compose'
        working-directory: 'oci_env'
        run: |
          oci-env compose build
          oci-env compose up &
      - name: Cypress
        if: steps.check.outputs.skip != 'true'
        uses: cypress-io/github-action@v5
        with:
          install: false
          start: docker run -d -e LOG_LEVEL=none -p 3002:3002 -e PORT=3002 ansible-ui
          wait-on: 'https://localhost:3002'
          record: true
          parallel: true
          config: specPattern=cypress/e2e/hub/**/*.cy.{js,jsx,ts,tsx}
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_AUI_HUB_E2E_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_AUI_HUB_E2E_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_TLS_REJECT_UNAUTHORIZED: 0

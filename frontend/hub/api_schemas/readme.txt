Files in the folder generated are autogenerated files from swagger open api backend definition. The interfaces can be used as API response types, so we
dont have to create all of them manualy.

However, some of them may be incomplete. So we can create new ones for example in this folder and extends them from the generated ones. Do not directly modify generated ones as they
can be modified by generator in the future. Interfaces also include URL that they represent in the comment above interface for better searchability.

Here is how you can modify them. Example:

export interface Animal {
  legs: number;
}

import { Animal } from './file1';

// This will extend the Animal interface from file1.ts
interface Animal {
  tail: boolean;   // add field
  legs: string;   // modify field
}

// delete legs, which will create new type
// it seems that Omit can return only types, not interfaces, but those are very similar and types can be used for our purposes
type AnimalWithoutLegs = Omit<Animal, 'legs'>;

paths-and-object.txt contains all the generated objects and their respective url paths in one file.

Some of them may contains something like this:
PaginatedansibleCollectionVersionResponseList<AnsibleCollectionVersionResponse>
/api/pulp/api/v3/content/ansible/collection_versions/

This URL returns PaginatedansibleCollectionVersionResponseList, but inside, it returns collection of objects that are of type AnsibleCollectionVersionResponse

name: Main

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: true
        default: patch
        type: choice
        options:
          - major
          - minor
          - patch
          - prerelease

concurrency: main

jobs:
  tag:
    name: Tag Release
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: write

    steps:
      - name: Downstream sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT: sync
          ORG: ansible
          REPO: aap-ui
        run: |
          curl -d "{\"event_type\": \"${EVENT}\"}" -H "Content-Type: application/json" -H "Authorization: token ${GITHUB_TOKEN}"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@users.noreply.github.com"

      - name: NPM Version - ${{ inputs.version || 'patch' }}
        run: |
          VERSION=`npm version ${{ inputs.version || 'patch' }} --no-git-tag-version`
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Git Commit Version and Push
        run: |
          git add --all
          git commit -m "${{ env.VERSION }} [skip ci]"
          git push origin --all

      - name: Git Tag Version and Push
        run: |
          git commit --allow-empty -m ${{ env.VERSION }}
          git tag -m ${{ env.VERSION }} ${{ env.VERSION }}

      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Git Tag Push
        run: |
          git push origin --tags

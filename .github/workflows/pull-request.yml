name: Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  packages:
    name: Packages
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

  container-image:
    name: Container Image
    runs-on: ubuntu-latest
    needs: packages
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: NPM Build
        run: npm run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Ansible UI
        uses: docker/build-push-action@v4
        with:
          context: .
          target: ansible-ui
          tags: ansible-ui
          load: true

      - run: docker save ansible-ui > ansible-ui.tar
      - uses: actions/upload-artifact@v3
        with:
          name: ansible-ui.tar
          path: ansible-ui.tar

  checks:
    name: ESLint - Prettier - TSC
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: packages
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run checks

  component-tests:
    name: Component Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: packages
    strategy:
      fail-fast: false
      matrix:
        containers: [1]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - uses: cypress-io/github-action@v4
        with:
          component: true
          install: false
          record: true
          parallel: true
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_COMPONENT_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_COMPONENT_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  awx-e2e:
    name: AWX E2E
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - packages
      - container-image
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ansible-ui.tar
      - run: docker load --input ansible-ui.tar
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - uses: cypress-io/github-action@v4
        with:
          install: false
          start: npm run docker:run
          wait-on: 'https://localhost:3002'
          record: true
          parallel: true
          config: specPattern=cypress/e2e/awx/**/*.cy.ts
        env:
          CYPRESS_AWX_SERVER: ${{ secrets.CYPRESS_AWX_SERVER }}
          CYPRESS_AWX_USERNAME: ${{ secrets.CYPRESS_AWX_USERNAME }}
          CYPRESS_AWX_PASSWORD: ${{ secrets.CYPRESS_AWX_PASSWORD }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_AWX_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_AWX_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_TLS_REJECT_UNAUTHORIZED: 0

  eda-e2e:
    name: EDA E2E
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - packages
      - container-image
    strategy:
      fail-fast: false
      matrix:
        containers: [1]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Quay
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Setup EDA Server
        run: |
          mkdir eda
          cd eda
          echo "${{ secrets.EDA_DOCKER_COMPOSE }}" > docker-compose.yaml
          docker compose up -d --quiet-pull
      - uses: actions/download-artifact@v3
        with:
          name: ansible-ui.tar
      - run: docker load --input ansible-ui.tar
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - uses: cypress-io/github-action@v4
        with:
          install: false
          start: docker run -d -e LOG_LEVEL=none -p 3002:3002 -e PORT=3002 --network eda_default ansible-ui
          wait-on: 'https://localhost:3002'
          record: true
          parallel: true
          config: specPattern=cypress/e2e/eda/**/*.cy.ts
        env:
          CYPRESS_EDA_SERVER: http://eda-api:8000/
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_EDA_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_EDA_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_TLS_REJECT_UNAUTHORIZED: 0

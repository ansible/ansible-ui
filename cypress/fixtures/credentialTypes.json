{
  "count": 10,
  "next": "/api/v2/credential_types/?order_by=-managed&page=2&page_size=10",
  "previous": null,
  "results": [
    {
      "id": 28,
      "type": "credential_type",
      "url": "/api/v2/credential_types/28/",
      "related": {
        "credentials": "/api/v2/credential_types/28/credentials/",
        "activity_stream": "/api/v2/credential_types/28/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.877412Z",
      "modified": "2023-10-04T14:54:44.877412Z",
      "name": "Thycotic Secret Server",
      "description": "",
      "kind": "external",
      "namespace": "thycotic_tss",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "server_url",
            "label": "Secret Server URL",
            "help_text": "The Base URL of Secret Server e.g. https://myserver/SecretServer or https://mytenant.secretservercloud.com",
            "type": "string"
          },
          {
            "id": "username",
            "label": "Username",
            "help_text": "The (Application) user username",
            "type": "string"
          },
          {
            "id": "domain",
            "label": "Domain",
            "help_text": "The (Application) user domain",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password",
            "help_text": "The corresponding password",
            "type": "string",
            "secret": true
          }
        ],
        "metadata": [
          {
            "id": "secret_id",
            "label": "Secret ID",
            "help_text": "The integer ID of the secret",
            "type": "string"
          },
          {
            "id": "secret_field",
            "label": "Secret Field",
            "help_text": "The field to extract from the secret",
            "type": "string"
          }
        ],
        "required": ["server_url", "username", "password", "secret_id", "secret_field"]
      },
      "injectors": {}
    },
    {
      "id": 1,
      "type": "credential_type",
      "url": "/api/v2/credential_types/1/",
      "related": {
        "credentials": "/api/v2/credential_types/1/credentials/",
        "activity_stream": "/api/v2/credential_types/1/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.749685Z",
      "modified": "2023-10-04T14:54:44.749685Z",
      "name": "Machine",
      "description": "",
      "kind": "ssh",
      "namespace": "ssh",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "username",
            "label": "Username",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password",
            "type": "string",
            "secret": true,
            "ask_at_runtime": true
          },
          {
            "id": "ssh_key_data",
            "label": "SSH Private Key",
            "type": "string",
            "format": "ssh_private_key",
            "secret": true,
            "multiline": true
          },
          {
            "id": "ssh_public_key_data",
            "label": "Signed SSH Certificate",
            "type": "string",
            "multiline": true,
            "secret": true
          },
          {
            "id": "ssh_key_unlock",
            "label": "Private Key Passphrase",
            "type": "string",
            "secret": true,
            "ask_at_runtime": true
          },
          {
            "id": "become_method",
            "label": "Privilege Escalation Method",
            "type": "string",
            "help_text": "Specify a method for \"become\" operations. This is equivalent to specifying the --become-method Ansible parameter."
          },
          {
            "id": "become_username",
            "label": "Privilege Escalation Username",
            "type": "string"
          },
          {
            "id": "become_password",
            "label": "Privilege Escalation Password",
            "type": "string",
            "secret": true,
            "ask_at_runtime": true
          }
        ]
      },
      "injectors": {}
    },
    {
      "id": 2,
      "type": "credential_type",
      "url": "/api/v2/credential_types/2/",
      "related": {
        "credentials": "/api/v2/credential_types/2/credentials/",
        "activity_stream": "/api/v2/credential_types/2/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.755953Z",
      "modified": "2023-10-04T14:54:44.755953Z",
      "name": "Source Control",
      "description": "",
      "kind": "scm",
      "namespace": "scm",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "username",
            "label": "Username",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password",
            "type": "string",
            "secret": true
          },
          {
            "id": "ssh_key_data",
            "label": "SCM Private Key",
            "type": "string",
            "format": "ssh_private_key",
            "secret": true,
            "multiline": true
          },
          {
            "id": "ssh_key_unlock",
            "label": "Private Key Passphrase",
            "type": "string",
            "secret": true
          }
        ]
      },
      "injectors": {}
    },
    {
      "id": 3,
      "type": "credential_type",
      "url": "/api/v2/credential_types/3/",
      "related": {
        "credentials": "/api/v2/credential_types/3/credentials/",
        "activity_stream": "/api/v2/credential_types/3/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.760411Z",
      "modified": "2023-10-04T14:54:44.760411Z",
      "name": "Vault",
      "description": "",
      "kind": "vault",
      "namespace": "vault",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "vault_password",
            "label": "Vault Password",
            "type": "string",
            "secret": true,
            "ask_at_runtime": true
          },
          {
            "id": "vault_id",
            "label": "Vault Identifier",
            "type": "string",
            "format": "vault_id",
            "help_text": "Specify an (optional) Vault ID. This is equivalent to specifying the --vault-id Ansible parameter for providing multiple Vault passwords.  Note: this feature only works in Ansible 2.4+."
          }
        ],
        "required": ["vault_password"]
      },
      "injectors": {}
    },
    {
      "id": 4,
      "type": "credential_type",
      "url": "/api/v2/credential_types/4/",
      "related": {
        "credentials": "/api/v2/credential_types/4/credentials/",
        "activity_stream": "/api/v2/credential_types/4/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.764681Z",
      "modified": "2023-10-04T14:54:44.764681Z",
      "name": "Network",
      "description": "",
      "kind": "net",
      "namespace": "net",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "username",
            "label": "Username",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password",
            "type": "string",
            "secret": true
          },
          {
            "id": "ssh_key_data",
            "label": "SSH Private Key",
            "type": "string",
            "format": "ssh_private_key",
            "secret": true,
            "multiline": true
          },
          {
            "id": "ssh_key_unlock",
            "label": "Private Key Passphrase",
            "type": "string",
            "secret": true
          },
          {
            "id": "authorize",
            "label": "Authorize",
            "type": "boolean"
          },
          {
            "id": "authorize_password",
            "label": "Authorize Password",
            "type": "string",
            "secret": true
          }
        ],
        "dependencies": {
          "authorize_password": ["authorize"]
        },
        "required": ["username"]
      },
      "injectors": {}
    },
    {
      "id": 5,
      "type": "credential_type",
      "url": "/api/v2/credential_types/5/",
      "related": {
        "credentials": "/api/v2/credential_types/5/credentials/",
        "activity_stream": "/api/v2/credential_types/5/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.768936Z",
      "modified": "2023-10-04T14:54:44.768936Z",
      "name": "Amazon Web Services",
      "description": "",
      "kind": "cloud",
      "namespace": "aws",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "username",
            "label": "Access Key",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Secret Key",
            "type": "string",
            "secret": true
          },
          {
            "id": "security_token",
            "label": "STS Token",
            "type": "string",
            "secret": true,
            "help_text": "Security Token Service (STS) is a web service that enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users."
          }
        ],
        "required": ["username", "password"]
      },
      "injectors": {}
    },
    {
      "id": 6,
      "type": "credential_type",
      "url": "/api/v2/credential_types/6/",
      "related": {
        "credentials": "/api/v2/credential_types/6/credentials/",
        "activity_stream": "/api/v2/credential_types/6/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.773010Z",
      "modified": "2023-10-04T14:54:44.773010Z",
      "name": "OpenStack",
      "description": "",
      "kind": "cloud",
      "namespace": "openstack",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "username",
            "label": "Username",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password (API Key)",
            "type": "string",
            "secret": true
          },
          {
            "id": "host",
            "label": "Host (Authentication URL)",
            "type": "string",
            "help_text": "The host to authenticate with.  For example, https://openstack.business.com/v2.0/"
          },
          {
            "id": "project",
            "label": "Project (Tenant Name)",
            "type": "string"
          },
          {
            "id": "project_domain_name",
            "label": "Project (Domain Name)",
            "type": "string"
          },
          {
            "id": "domain",
            "label": "Domain Name",
            "type": "string",
            "help_text": "OpenStack domains define administrative boundaries. It is only needed for Keystone v3 authentication URLs. Refer to the documentation for common scenarios."
          },
          {
            "id": "region",
            "label": "Region Name",
            "type": "string",
            "help_text": "For some cloud providers, like OVH, region must be specified"
          },
          {
            "id": "verify_ssl",
            "label": "Verify SSL",
            "type": "boolean",
            "default": true
          }
        ],
        "required": ["username", "password", "host", "project"]
      },
      "injectors": {}
    },
    {
      "id": 7,
      "type": "credential_type",
      "url": "/api/v2/credential_types/7/",
      "related": {
        "credentials": "/api/v2/credential_types/7/credentials/",
        "activity_stream": "/api/v2/credential_types/7/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-04T14:54:44.777106Z",
      "modified": "2023-10-04T14:54:44.777106Z",
      "name": "VMware vCenter",
      "description": "",
      "kind": "cloud",
      "namespace": "vmware",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "host",
            "label": "VCenter Host",
            "type": "string",
            "help_text": "Enter the hostname or IP address that corresponds to your VMware vCenter."
          },
          {
            "id": "username",
            "label": "Username",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password",
            "type": "string",
            "secret": true
          }
        ],
        "required": ["host", "username", "password"]
      },
      "injectors": {}
    },
    {
      "id": 29,
      "type": "credential_type",
      "url": "/api/v2/credential_types/29/",
      "related": {
        "created_by": "/api/v2/users/3/",
        "modified_by": "/api/v2/users/3/",
        "credentials": "/api/v2/credential_types/29/credentials/",
        "activity_stream": "/api/v2/credential_types/29/activity_stream/"
      },
      "summary_fields": {
        "created_by": {
          "id": 3,
          "username": "dev",
          "first_name": "",
          "last_name": ""
        },
        "modified_by": {
          "id": 3,
          "username": "dev",
          "first_name": "",
          "last_name": ""
        },
        "user_capabilities": {
          "edit": false,
          "delete": false
        }
      },
      "created": "2023-10-17T17:38:26.682610Z",
      "modified": "2023-10-17T17:38:26.682623Z",
      "name": "test",
      "description": "",
      "kind": "cloud",
      "namespace": null,
      "managed": false,
      "inputs": {},
      "injectors": {}
    },
    {
      "id": 31,
      "type": "credential_type",
      "url": "/api/v2/credential_types/31/",
      "related": {
        "created_by": "/api/v2/users/3/",
        "modified_by": "/api/v2/users/3/",
        "credentials": "/api/v2/credential_types/31/credentials/",
        "activity_stream": "/api/v2/credential_types/31/activity_stream/"
      },
      "summary_fields": {
        "created_by": {
          "id": 3,
          "username": "dev",
          "first_name": "",
          "last_name": ""
        },
        "modified_by": {
          "id": 3,
          "username": "dev",
          "first_name": "",
          "last_name": ""
        },
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-10-18T17:12:31.772464Z",
      "modified": "2023-10-18T17:12:31.772477Z",
      "name": "Custom1",
      "description": "Custom Description",
      "kind": "cloud",
      "namespace": null,
      "managed": false,
      "inputs": {},
      "injectors": {}
    },
    {
      "id": 17,
      "type": "credential_type",
      "url": "/api/v2/credential_types/17/",
      "related": {
        "credentials": "/api/v2/credential_types/17/credentials/",
        "activity_stream": "/api/v2/credential_types/17/activity_stream/"
      },
      "summary_fields": {
        "user_capabilities": {
          "edit": true,
          "delete": true
        }
      },
      "created": "2023-11-03T20:02:28.062075Z",
      "modified": "2023-11-03T20:02:28.062075Z",
      "name": "Container Registry",
      "description": "",
      "kind": "registry",
      "namespace": "registry",
      "managed": true,
      "inputs": {
        "fields": [
          {
            "id": "host",
            "label": "Authentication URL",
            "type": "string",
            "help_text": "Authentication endpoint for the container registry.",
            "default": "quay.io"
          },
          {
            "id": "username",
            "label": "Username",
            "type": "string"
          },
          {
            "id": "password",
            "label": "Password or Token",
            "type": "string",
            "secret": true,
            "help_text": "A password or token used to authenticate with"
          },
          {
            "id": "verify_ssl",
            "label": "Verify SSL",
            "type": "boolean",
            "default": true
          }
        ],
        "required": ["host"]
      },
      "injectors": {}
    }
  ]
}

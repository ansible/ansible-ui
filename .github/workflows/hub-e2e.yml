name: hub-e2e

on:
  workflow_call:
    inputs:
      HUB_SERVER:
        type: string
        required: true
      SKIP_JOB:
        type: boolean
        required: false
        default: false
    secrets:
      HUB_PASSWORD:
        required: true
      CYPRESS_AUI_HUB_E2E_PROJECT_ID:
        required: true
      CYPRESS_AUI_HUB_E2E_RECORD_KEY:
        required: true

jobs:
  hub-ui-image:
    name: HUB UI Image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        if: ${{ !inputs.SKIP_JOB }}
        with:
          fetch-depth: 1
      - name: PreCache
        if: ${{ !inputs.SKIP_JOB }}
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        if: ${{ !inputs.SKIP_JOB }}
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' &&  !inputs.SKIP_JOB
        run: npm ci
      - name: NPM Build
        if: ${{ !inputs.SKIP_JOB }}
        run: npm run build:hub
        env:
          HUB_API_PREFIX: '/api/galaxy'
      - name: Build Image
        if: ${{ !inputs.SKIP_JOB }}
        run: npm run docker:build:hub
      - name: Save Image
        if: ${{ !inputs.SKIP_JOB }}
        run: docker save hub-ui > hub-ui.tar
      - name: Upload Image
        if: ${{ !inputs.SKIP_JOB }}
        uses: actions/upload-artifact@v3
        with:
          name: hub-ui.tar
          path: hub-ui.tar

  hub-e2e:
    name: HUB E2E
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: hub-ui-image
    strategy:
      fail-fast: false
      matrix:
        containers: [1]
    steps:
      - name: Checkout
        if: ${{ !inputs.SKIP_JOB }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Download container image
        if: ${{ !inputs.SKIP_JOB }}
        uses: actions/download-artifact@v3
        with:
          name: hub-ui.tar
      - name: Load container image
        if: ${{ !inputs.SKIP_JOB }}
        run: docker load --input hub-ui.tar
      - name: Setup Node
        if: ${{ !inputs.SKIP_JOB }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: PreCache
        if: ${{ !inputs.SKIP_JOB }}
        run: npm version 0.0.0 --no-git-tag-version
      - name: Cache dependencies
        if: ${{ !inputs.SKIP_JOB }}
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            /home/runner/.cache/Cypress
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' && !inputs.SKIP_JOB
        run: npm ci
      - name: Install galaxykit
        run: pip3 install galaxykit
      - name: Cypress
        if: ${{ !inputs.SKIP_JOB }}
        uses: cypress-io/github-action@v5
        with:
          install: false
          start: npm run docker:run:hub
          wait-on: 'https://localhost:4102'
          record: true
          parallel: true
          config-file: cypress.hub.config.ts
        env:
          HUB_SERVER: ${{ inputs.HUB_SERVER }}
          HUB_USERNAME: e2e
          HUB_PASSWORD: ${{ secrets.HUB_PASSWORD }}
          HUB_API_PREFIX: '/api/galaxy'
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_AUI_HUB_E2E_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_AUI_HUB_E2E_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_TLS_REJECT_UNAUTHORIZED: 0

